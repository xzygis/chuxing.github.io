<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Chu Xing</title><link>https://xzygis.github.io/post/</link><description>Recent content in Posts on Chu Xing</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 03 Dec 2022 19:21:25 +0800</lastBuildDate><atom:link href="https://xzygis.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo Quick Start</title><link>https://xzygis.github.io/post/hugo-quick-start/</link><pubDate>Sat, 03 Dec 2022 19:21:25 +0800</pubDate><guid>https://xzygis.github.io/post/hugo-quick-start/</guid><description>Intall go install github.com/gohugoio/hugo@latest Quick Start https://gohugo.io/getting-started/quick-start/ 运行以下命令创建一个使用Ananke主题的网站： hugo new site quickstart cd quickstart git init git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke themes/ananke echo &amp;#34;theme = &amp;#39;ananke&amp;#39;&amp;#34; &amp;gt;&amp;gt; config.toml hugo server Add Content 给网站增加新的网页： hugo new posts/my-first-post.md Hug</description></item><item><title>Redis底层数据结构介绍</title><link>https://xzygis.github.io/post/20221130-introduction-to-the-underlying-data-structure-of-redis/</link><pubDate>Wed, 30 Nov 2022 22:03:21 +0000</pubDate><guid>https://xzygis.github.io/post/20221130-introduction-to-the-underlying-data-structure-of-redis/</guid><description>简单动态字符串 每个sds.h/sdshdr结构表示一个SDS值： struct sdshdr { //记录buf数组中已使用字节的数量 //等于SDS所保存字符串的长度 int</description></item><item><title>Tair:分布式键/值存储系统</title><link>https://xzygis.github.io/post/20221127-tair-a-distributed-key-value-storage-system-developed-by-alibaba-group/</link><pubDate>Sun, 27 Nov 2022 23:11:28 +0000</pubDate><guid>https://xzygis.github.io/post/20221127-tair-a-distributed-key-value-storage-system-developed-by-alibaba-group/</guid><description>产品概览 Tair 是快速访问内存 (MDB)/持久性 (LDB) 存储服务。 Tair采用高性能、高可用的分布式集群架构，可以满足企业对读写性能和可扩展容量的高要求</description></item><item><title>程序员做需求时容易忽视的若干问题</title><link>https://xzygis.github.io/post/20221120-some-problems-that-programmers-tend-to-ignore-when-making-requirements/</link><pubDate>Sun, 20 Nov 2022 23:33:08 +0000</pubDate><guid>https://xzygis.github.io/post/20221120-some-problems-that-programmers-tend-to-ignore-when-making-requirements/</guid><description>程序员大部分时间都在承接一个个的需求，在做需求的过程中，有一些问题是我们容易忽视的，究其原因，主要是在做需求的过程中缺少思考，或者思考不够全</description></item><item><title>给新人程序员的职场建议</title><link>https://xzygis.github.io/post/20221120-career-advice-for-beginning-programmers/</link><pubDate>Sun, 20 Nov 2022 22:01:20 +0000</pubDate><guid>https://xzygis.github.io/post/20221120-career-advice-for-beginning-programmers/</guid><description>我是一位在大厂打拼多年的程序员，今天想结合自己的工作经历给新人程序员们提出若干建议，希望能够在一定程度上帮助大家在职场脱颖而出。 积极主动 第一</description></item><item><title>浅谈Bloom Filter基本原理及使用方式</title><link>https://xzygis.github.io/post/20210612-introduction-to-the-basic-principles-of-bloom-filter/</link><pubDate>Sat, 12 Jun 2021 16:22:56 +0000</pubDate><guid>https://xzygis.github.io/post/20210612-introduction-to-the-basic-principles-of-bloom-filter/</guid><description>一提到元素查找，我们会很自然的想到HashMap。通过将哈希函数作用于key上，我们得到了哈希值，基于哈希值我们可以去表里的相应位置获取对应</description></item><item><title>Linux文件传输的三种方式</title><link>https://xzygis.github.io/post/20210612-three-ways-to-transfer-files-in-linux/</link><pubDate>Sat, 12 Jun 2021 16:14:22 +0000</pubDate><guid>https://xzygis.github.io/post/20210612-three-ways-to-transfer-files-in-linux/</guid><description>1 nc命令 执行如下命令，在目标机器(假设ip为10.11.12.13)上监听端口8415 nc -l 8415 &amp;gt; data.txt 往目标机器发送数据 nc -v 10.11.12.13 8415 &amp;lt; ~/Downloads/data.txt 2 SimpleHTTPServer 在服务器</description></item><item><title>Websocket介绍</title><link>https://xzygis.github.io/post/20210612-introduction-of-websocket/</link><pubDate>Sat, 12 Jun 2021 15:25:21 +0000</pubDate><guid>https://xzygis.github.io/post/20210612-introduction-of-websocket/</guid><description>什么是WebSocket？ WebSocket是一种网络传输协议，可在单个TCP连接上进行全双工通信，位于OSI模型的应用层。WebSocke</description></item><item><title>Consul入门手册</title><link>https://xzygis.github.io/post/20200130-manual-of-consul/</link><pubDate>Thu, 30 Jan 2020 13:35:59 +0000</pubDate><guid>https://xzygis.github.io/post/20200130-manual-of-consul/</guid><description>Consul是什么？ Consul是一个服务发现和配置工具，它是分布式和高可用的，而且极易扩展。 Consul主要提供了以下特性： 服务发现：Co</description></item><item><title>JSON Web Token入门手册</title><link>https://xzygis.github.io/post/20200130-usage-of-json-web-token/</link><pubDate>Thu, 30 Jan 2020 13:10:39 +0000</pubDate><guid>https://xzygis.github.io/post/20200130-usage-of-json-web-token/</guid><description>跨域认证问题 互联网服务离不开用户认证。一般流程是下面这样： 用户向服务器发送用户名和密码。 服务器验证通过后，在当前对话（session）里面保</description></item><item><title>Docker之容器使用</title><link>https://xzygis.github.io/post/20200130-usage-of-docker-container/</link><pubDate>Thu, 30 Jan 2020 13:01:19 +0000</pubDate><guid>https://xzygis.github.io/post/20200130-usage-of-docker-container/</guid><description>获取镜像 $ docker pull ubuntu 启动容器： $ docker run -it ubuntu /bin/bash # 要退出终端，直接输入 exit 启动已停止运行的容器 $ docker ps -a 启动已停止运行的容器 $ docker start b750bbbcfd88 后台运行 $ docker run -itd --name ubuntu-test ubuntu</description></item><item><title>Docker之镜像使用</title><link>https://xzygis.github.io/post/20200130-usage-of-docker-image/</link><pubDate>Thu, 30 Jan 2020 12:58:32 +0000</pubDate><guid>https://xzygis.github.io/post/20200130-usage-of-docker-image/</guid><description>获取镜像 用法： $ docker pull [OPTIONS] NAME[:TAG|@DIGEST] 例如：docker pull ubuntu:18.04 启动容器 $ docker run -it --rm ubuntu:18.04 bash 简要的说明一下上面用到的参数: -it：这是两个参数，一个是 -i表示交互式</description></item><item><title>CentOS安装docker</title><link>https://xzygis.github.io/post/20200130-centos-install-docker/</link><pubDate>Thu, 30 Jan 2020 12:56:35 +0000</pubDate><guid>https://xzygis.github.io/post/20200130-centos-install-docker/</guid><description>1. 移除旧的版本 sudo yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-selinux \ docker-engine-selinux \ docker-engine 2. 安装一些必要的系统工具 sudo yum install -y yum-utils device-mapper-persistent-data lvm2 3. 添加软件源信息 sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo 4. 更新 yum 缓存 sudo yum makecache fast</description></item><item><title>SO_REUSEADDR &amp; SO_REUSEPORT</title><link>https://xzygis.github.io/post/20200130-so-reuseaddr-so-reuseport/</link><pubDate>Thu, 30 Jan 2020 12:50:51 +0000</pubDate><guid>https://xzygis.github.io/post/20200130-so-reuseaddr-so-reuseport/</guid><description>SO_REUSEADDR 当有一个有相同本地地址和端口的socket1处于TIME_WAIT状态时，而你启动的程序的socket2要占用该地址和端口，你的程序就要用</description></item><item><title>Kubernetes概述</title><link>https://xzygis.github.io/post/20200129-introduction-of-k8s/</link><pubDate>Wed, 29 Jan 2020 23:53:11 +0000</pubDate><guid>https://xzygis.github.io/post/20200129-introduction-of-k8s/</guid><description>Kubernetes 简介 Kubernetes 是谷歌开源的容器集群管理系统，是 Google 多年大规模容器管理技术 Borg 的开源版本，主要功能包括： 基于容器的应用部署、维护和滚动升级 负载均衡和服务</description></item><item><title>云原生概述</title><link>https://xzygis.github.io/post/20200128-introduction-of-cloud-native/</link><pubDate>Tue, 28 Jan 2020 15:05:10 +0000</pubDate><guid>https://xzygis.github.io/post/20200128-introduction-of-cloud-native/</guid><description>云原生的定义 云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。云原生的代表技术包括容器、服务网格、</description></item><item><title>Service Mesh概述</title><link>https://xzygis.github.io/post/20200128-introduction-of-service-mesh/</link><pubDate>Tue, 28 Jan 2020 14:48:01 +0000</pubDate><guid>https://xzygis.github.io/post/20200128-introduction-of-service-mesh/</guid><description>什么是服务网格？ 服务网格是用于处理服务间通信的专用基础设施层。它负责通过包含现代云原生应用程序的复杂服务拓扑来可靠地传递请求。实际上，服务网</description></item><item><title>API网关概述</title><link>https://xzygis.github.io/post/20200127-introduction-of-api-gateway/</link><pubDate>Mon, 27 Jan 2020 22:51:43 +0000</pubDate><guid>https://xzygis.github.io/post/20200127-introduction-of-api-gateway/</guid><description>1 背景 由于后端的微服务拆分，客户端通常需要请求多个服务获取所需数据。 不同客户端所需要的数据不一样。例如，PC需要的数据通常比移动端更加详细。</description></item><item><title>如何通过GitHub+Hexo搭建博客</title><link>https://xzygis.github.io/post/20200127-how-to-create-a-hexo-blog/</link><pubDate>Mon, 27 Jan 2020 21:52:50 +0000</pubDate><guid>https://xzygis.github.io/post/20200127-how-to-create-a-hexo-blog/</guid><description>安装Node $ brew install node 安装Hexo $ npm install -g hexo 初始化Hexo $ hexo init 生成网页文件和开启服务器 $ hexo g $ hexo s 关联Github 修改_config.yml</description></item></channel></rss>