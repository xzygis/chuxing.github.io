<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Storage - 分类 - 楚兴的技术笔记</title><link>https://xzygis.github.io/categories/storage/</link><description>Storage - 分类 - 楚兴的技术笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>xzygis@163.com (chuxing)</managingEditor><webMaster>xzygis@163.com (chuxing)</webMaster><lastBuildDate>Wed, 12 Apr 2023 21:08:02 +0800</lastBuildDate><atom:link href="https://xzygis.github.io/categories/storage/" rel="self" type="application/rss+xml"/><item><title>ES数据建模之关联关系处理</title><link>https://xzygis.github.io/posts/es-modeling-your-data/</link><pubDate>Wed, 12 Apr 2023 21:08:02 +0800</pubDate><author>chuxing</author><guid>https://xzygis.github.io/posts/es-modeling-your-data/</guid><description><![CDATA[<p>现实世界有很多重要的关联关系：博客帖子有一些评论，银行账户有多次交易记录，客户有多个银行账户，订单有多个订单明细，文件目录有多个文件和子目录。</p>
<h2 id="内部对象数组">内部对象数组</h2>
<p>考虑包含内部对象的数组是如何被索引的。 假设我们有个 followers 数组：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;followers&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span> <span class="nt">&#34;age&#34;</span><span class="p">:</span> <span class="mi">35</span><span class="p">,</span> <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Mary White&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span> <span class="nt">&#34;age&#34;</span><span class="p">:</span> <span class="mi">26</span><span class="p">,</span> <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Alex Jones&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span> <span class="nt">&#34;age&#34;</span><span class="p">:</span> <span class="mi">19</span><span class="p">,</span> <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Lisa Smith&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个文档会像我们之前描述的那样被扁平化处理，结果如下所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;followers.age&#34;</span><span class="p">:</span>    <span class="p">[</span><span class="mi">19</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">35</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;followers.name&#34;</span><span class="p">:</span>   <span class="p">[</span><span class="err">alex</span><span class="p">,</span> <span class="err">jones</span><span class="p">,</span> <span class="err">lisa</span><span class="p">,</span> <span class="err">smith</span><span class="p">,</span> <span class="err">mary</span><span class="p">,</span> <span class="err">white</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>{age: 35}</code> 和 <code>{name: Mary White}</code> 之间的相关性已经丢失了，因为每个多值域只是一包无序的值，而不是有序数组。</p>
<h2 id="嵌套对象">嵌套对象</h2>
<p>由于在 Elasticsearch 中单个文档的增删改都是原子性操作,那么将相关实体数据都存储在同一文档中也就理所当然。 比如说,我们可以将订单及其明细数据存储在一个文档中。又比如,我们可以将一篇博客文章的评论以一个 comments 数组的形式和博客文章放在一起：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="err">PUT</span> <span class="err">/my_index/blogpost/</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;title&#34;</span><span class="p">:</span> <span class="s2">&#34;Nest eggs&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;body&#34;</span><span class="p">:</span>  <span class="s2">&#34;Making your money work...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;tags&#34;</span><span class="p">:</span>  <span class="p">[</span> <span class="s2">&#34;cash&#34;</span><span class="p">,</span> <span class="s2">&#34;shares&#34;</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments&#34;</span><span class="p">:</span> <span class="p">[</span> 
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span>    <span class="s2">&#34;John Smith&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;comment&#34;</span><span class="p">:</span> <span class="s2">&#34;Great article&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;age&#34;</span><span class="p">:</span>     <span class="mi">28</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;stars&#34;</span><span class="p">:</span>   <span class="mi">4</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;date&#34;</span><span class="p">:</span>    <span class="s2">&#34;2014-09-01&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span>    <span class="s2">&#34;Alice White&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;comment&#34;</span><span class="p">:</span> <span class="s2">&#34;More like this please&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;age&#34;</span><span class="p">:</span>     <span class="mi">31</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;stars&#34;</span><span class="p">:</span>   <span class="mi">5</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;date&#34;</span><span class="p">:</span>    <span class="s2">&#34;2014-10-22&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果我们依赖字段自动映射,那么 comments 字段会自动映射为 object 类型。</p>
<p>由于所有的信息都在一个文档中,当我们查询时就没有必要去联合文章和评论文档,查询效率就很高。但是因为JSON 格式的文档被处理成如下的扁平式键值对的结构，会导致查询结果不准确。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;title&#34;</span><span class="p">:</span>            <span class="p">[</span> <span class="err">eggs</span><span class="p">,</span> <span class="err">nest</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;body&#34;</span><span class="p">:</span>             <span class="p">[</span> <span class="err">making</span><span class="p">,</span> <span class="err">money</span><span class="p">,</span> <span class="err">work</span><span class="p">,</span> <span class="err">your</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;tags&#34;</span><span class="p">:</span>             <span class="p">[</span> <span class="err">cash</span><span class="p">,</span> <span class="err">shares</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.name&#34;</span><span class="p">:</span>    <span class="p">[</span> <span class="err">alice</span><span class="p">,</span> <span class="err">john</span><span class="p">,</span> <span class="err">smith</span><span class="p">,</span> <span class="err">white</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.comment&#34;</span><span class="p">:</span> <span class="p">[</span> <span class="err">article</span><span class="p">,</span> <span class="err">great</span><span class="p">,</span> <span class="err">like</span><span class="p">,</span> <span class="err">more</span><span class="p">,</span> <span class="err">please</span><span class="p">,</span> <span class="err">this</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.age&#34;</span><span class="p">:</span>     <span class="p">[</span> <span class="mi">28</span><span class="p">,</span> <span class="mi">31</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.stars&#34;</span><span class="p">:</span>   <span class="p">[</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.date&#34;</span><span class="p">:</span>    <span class="p">[</span> <span class="mi">2014-09-01</span><span class="p">,</span> <span class="mi">2014-10-22</span> <span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>嵌套对象 就是来解决这个问题的。将 comments 字段类型设置为 nested 而不是 object 后,每一个嵌套对象都会被索引为一个 隐藏的独立文档 ,举例如下:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span> 
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.name&#34;</span><span class="p">:</span>    <span class="p">[</span> <span class="err">john</span><span class="p">,</span> <span class="err">smith</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.comment&#34;</span><span class="p">:</span> <span class="p">[</span> <span class="err">article</span><span class="p">,</span> <span class="err">great</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.age&#34;</span><span class="p">:</span>     <span class="p">[</span> <span class="mi">28</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.stars&#34;</span><span class="p">:</span>   <span class="p">[</span> <span class="mi">4</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.date&#34;</span><span class="p">:</span>    <span class="p">[</span> <span class="mi">2014-09-01</span> <span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span> 
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.name&#34;</span><span class="p">:</span>    <span class="p">[</span> <span class="err">alice</span><span class="p">,</span> <span class="err">white</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.comment&#34;</span><span class="p">:</span> <span class="p">[</span> <span class="err">like</span><span class="p">,</span> <span class="err">more</span><span class="p">,</span> <span class="err">please</span><span class="p">,</span> <span class="err">this</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.age&#34;</span><span class="p">:</span>     <span class="p">[</span> <span class="mi">31</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.stars&#34;</span><span class="p">:</span>   <span class="p">[</span> <span class="mi">5</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;comments.date&#34;</span><span class="p">:</span>    <span class="p">[</span> <span class="mi">2014-10-22</span> <span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span> 
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;title&#34;</span><span class="p">:</span>            <span class="p">[</span> <span class="err">eggs</span><span class="p">,</span> <span class="err">nest</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;body&#34;</span><span class="p">:</span>             <span class="p">[</span> <span class="err">making</span><span class="p">,</span> <span class="err">money</span><span class="p">,</span> <span class="err">work</span><span class="p">,</span> <span class="err">your</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;tags&#34;</span><span class="p">:</span>             <span class="p">[</span> <span class="err">cash</span><span class="p">,</span> <span class="err">shares</span> <span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>第一个和第二个为嵌套文档，第三个为根文档。</p>
<p>在独立索引每一个嵌套对象后,对象中每个字段的相关性得以保留。我们查询时,也仅仅返回那些真正符合条件的文档。</p>
<p>不仅如此,由于嵌套文档直接存储在文档内部,查询时嵌套文档和根文档联合成本很低,速度和单独存储几乎一样。</p>
<p>嵌套文档是隐藏存储的,我们不能直接获取。如果要增删改一个嵌套对象,我们必须把整个文档重新索引才可以。值得注意的是,查询的时候返回的是整个文档,而不是嵌套文档本身。</p>
<h2 id="父-子关系文档">父-子关系文档</h2>
<p>父-子关系文档 在实质上类似于 nested model（嵌套对象） ：允许将一个对象实体和另外一个对象实体关联起来。而这两种类型的主要区别是：在 nested objects 文档中，所有对象都是在同一个文档中，而在父-子关系文档中，父对象和子对象都是完全独立的文档。</p>
<p>父-子关系的主要作用是允许把一个 type 的文档和另外一个 type 的文档关联起来，构成一对多的关系：一个父文档可以对应多个子文档 。与 nested objects 相比，父-子关系的主要优势有：</p>
<ul>
<li>
<p>更新父文档时，不会重新索引子文档。</p>
</li>
<li>
<p>创建，修改或删除子文档时，不会影响父文档或其他子文档。这一点在这种场景下尤其有用：子文档数量较多，并且子文档创建和修改的频率高时。</p>
</li>
<li>
<p>子文档可以作为搜索结果独立返回。</p>
</li>
<li>
<p>Elasticsearch 维护了一个父文档和子文档的映射关系，得益于这个映射，父-子文档关联查询操作非常快。但是这个映射也对父-子文档关系有个限制条件：父文档和其所有子文档，都必须要存储在同一个分片中。</p>
</li>
</ul>
]]></description></item></channel></rss>