<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>云原生 - 分类 - 楚兴 - Chuxing's Blog</title><link>https://xzygis.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/</link><description>Chuxing's Tech Blog</description><generator>Hugo 0.133.1 &amp; FixIt v0.3.10-08d4c12c</generator><language>zh-CN</language><lastBuildDate>Sat, 10 Dec 2022 14:35:38 +0800</lastBuildDate><atom:link href="https://xzygis.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes概述</title><link>https://xzygis.github.io/posts/introduction-of-k8s/</link><pubDate>Wed, 29 Jan 2020 23:53:11 +0000</pubDate><guid>https://xzygis.github.io/posts/introduction-of-k8s/</guid><category domain="https://xzygis.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/">云原生</category><description>Kubernetes 简介 Kubernetes 是谷歌开源的容器集群管理系统，是 Google 多年大规模容器管理技术 Borg 的开源版本，主要功能包括： 基于容器的应用部署、维护和滚动升级 负载均衡和服务发现 跨机器和跨地区的集群调度 自动伸缩 无状态服务和有状态服务 广泛的 Volume 支持 插件机制保证扩展性 Kubernetes 是一个平台 Kubernetes 提供了很多的功能，它可以简化应用程序的工作流，加快开发速度</description></item><item><title>云原生概述</title><link>https://xzygis.github.io/posts/introduction-of-cloud-native/</link><pubDate>Tue, 28 Jan 2020 15:05:10 +0000</pubDate><guid>https://xzygis.github.io/posts/introduction-of-cloud-native/</guid><category domain="https://xzygis.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/">云原生</category><description>云原生的定义 云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。云原生的代表技术包括容器、服务网格、微服务、不可变基础设施和声明式API。 这些技术能够构建容错性好、易于管理和便于观察的松耦合系统。结合可靠的自动化手段，云原生技术使工程师能够轻松地对系统作出频繁</description></item><item><title>Service Mesh概述</title><link>https://xzygis.github.io/posts/introduction-of-service-mesh/</link><pubDate>Tue, 28 Jan 2020 14:48:01 +0000</pubDate><guid>https://xzygis.github.io/posts/introduction-of-service-mesh/</guid><category domain="https://xzygis.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/">云原生</category><description>什么是服务网格？ 服务网格是用于处理服务间通信的专用基础设施层。它负责通过包含现代云原生应用程序的复杂服务拓扑来可靠地传递请求。实际上，服务网格通常通过一组轻量级网络代理来实现，这些代理与应用程序代码一起部署，而不需要感知应用程序本身。 服务网格的特点 服务网格有如下几个特点： 应用程序间通讯的中间层 轻量级</description></item></channel></rss>