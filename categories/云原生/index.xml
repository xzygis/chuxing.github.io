<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>云原生 - 分类 - 楚兴 - Chuxing's Blog</title><link>https://xzygis.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/</link><description>云原生 - 分类 | 楚兴 - Chuxing's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 29 Jan 2020 23:53:11 +0000</lastBuildDate><atom:link href="https://xzygis.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/" rel="self" type="application/rss+xml"/><item><title>Kubernetes概述</title><link>https://xzygis.github.io/posts/introduction-of-k8s/</link><pubDate>Wed, 29 Jan 2020 23:53:11 +0000</pubDate><author>作者</author><guid>https://xzygis.github.io/posts/introduction-of-k8s/</guid><description><![CDATA[<h2 id="kubernetes-简介" class="heading-element">
  <a href="#kubernetes-%e7%ae%80%e4%bb%8b" class="heading-mark"></a>Kubernetes 简介</h2><p>Kubernetes 是谷歌开源的容器集群管理系统，是 Google 多年大规模容器管理技术 Borg 的开源版本，主要功能包括：</p>
<ul>
<li>基于容器的应用部署、维护和滚动升级</li>
<li>负载均衡和服务发现</li>
<li>跨机器和跨地区的集群调度</li>
<li>自动伸缩</li>
<li>无状态服务和有状态服务</li>
<li>广泛的 Volume 支持</li>
<li>插件机制保证扩展性</li>
</ul>
<h3 id="kubernetes-是一个平台" class="heading-element">
  <a href="#kubernetes-%e6%98%af%e4%b8%80%e4%b8%aa%e5%b9%b3%e5%8f%b0" class="heading-mark"></a>Kubernetes 是一个平台</h3><p>Kubernetes 提供了很多的功能，它可以简化应用程序的工作流，加快开发速度。</p>
<ul>
<li>用户可以使用 Label 以自己的方式组织管理资源，还可以使用 Annotation 来自定义资源的描述信息，比如为管理工具提供状态检查等。</li>
<li>Kubernetes 控制器也是构建在跟开发人员和用户使用的相同的 API 之上。用户还可以编写自己的控制器和调度器，也可以通过各种插件机制扩展系统的功能。</li>
</ul>
<h3 id="kubernetes-不是什么" class="heading-element">
  <a href="#kubernetes-%e4%b8%8d%e6%98%af%e4%bb%80%e4%b9%88" class="heading-mark"></a>Kubernetes 不是什么</h3><p>Kubernetes 不是一个传统意义上，包罗万象的 PaaS (平台即服务) 系统，它给用户保留了选择的自由和灵活性。</p>
<ul>
<li>不限制支持的应用程序类型。Kubernetes 旨在支持极其多样化的工作负载，包括无状态、有状态和数据处理工作负载。只要应用可以在容器中运行，那么它就可以很好的在 Kubernetes 上运行。</li>
<li>不提供内置的中间件 (如消息中间件)、数据处理框架 (如 Spark)、数据库 (如 mysql) 或集群存储系统 (如 Ceph) 等。</li>
<li>不直接部署代码，也不会构建您的应用程序。</li>
<li>允许用户选择自己的日志、监控和告警系统。</li>
<li>不提供应用程序配置语言或系统 (如 jsonnet)。</li>
<li>不提供机器配置、维护、管理或自愈系统。</li>
</ul>
<h3 id="核心组件" class="heading-element">
  <a href="#%e6%a0%b8%e5%bf%83%e7%bb%84%e4%bb%b6" class="heading-mark"></a>核心组件</h3><p>Kubernetes 主要由以下几个核心组件组成：</p>
<ul>
<li>etcd 保存了整个集群的状态；</li>
<li>apiserver 提供了资源操作的唯一入口，并提供认证、授权、访问控制、API 注册和发现等机制；</li>
<li>controller manager 负责维护集群的状态，比如故障检测、自动扩展、滚动更新等；</li>
<li>scheduler 负责资源的调度，按照预定的调度策略将 Pod 调度到相应的机器上；</li>
<li>kubelet 负责维护容器的生命周期，同时也负责 Volume（CVI）和网络（CNI）的管理；</li>
<li>Container runtime 负责镜像管理以及 Pod 和容器的真正运行（CRI）；</li>
<li>kube-proxy 负责为 Service 提供 cluster 内部的服务发现和负载均衡
<img loading="lazy" src="https://img-blog.csdnimg.cn/20191118230100546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=,size_16,color_FFFFFF,t_70" alt="k8s核心组件" srcset="https://img-blog.csdnimg.cn/20191118230100546.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=small, https://img-blog.csdnimg.cn/20191118230100546.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=medium 1.5x, https://img-blog.csdnimg.cn/20191118230100546.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=large 2x" sizes="auto" data-title="k8s核心组件" style="background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/></li>
</ul>
<h2 id="kubernetes-基本概念" class="heading-element">
  <a href="#kubernetes-%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5" class="heading-mark"></a>Kubernetes 基本概念</h2><h3 id="container" class="heading-element">
  <a href="#container" class="heading-mark"></a>Container</h3><p>Container（容器）是一种便携式、轻量级的操作系统级虚拟化技术。它使用 namespace 隔离不同的软件运行环境，并通过镜像自包含软件的运行环境，从而使得容器可以很方便的在任何地方运行。</p>
<p>使用容器，不需要与外部的基础架构环境绑定，因为每一个应用程序都不需要外部依赖，更不需要与外部的基础架构环境依赖。完美解决了从开发到生产环境的一致性问题。</p>
<p>容器同样比虚拟机更加透明，这有助于监测和管理。尤其是容器进程的生命周期由基础设施管理，而不是被进程管理器隐藏在容器内部。最后，每个应用程序用容器封装，管理容器部署就等同于管理应用程序部署。</p>
<p>容器的其他优点：</p>
<ul>
<li>敏捷的应用程序创建和部署：与虚拟机镜像相比，容器镜像更易用、更高效。</li>
<li>持续开发、集成和部署：提供可靠与频繁的容器镜像构建、部署和快速简便的回滚（镜像是不可变的）。</li>
<li>开发与运维的关注分离：在构建/发布时即创建容器镜像，从而将应用与基础架构分离。</li>
<li>开发、测试与生产环境的一致性：在笔记本电脑上运行和云中一样。</li>
<li>可观测：不仅显示操作系统的信息和度量，还显示应用自身的信息和度量。</li>
<li>云和操作系统的分发可移植性：可运行在 Ubuntu, RHEL, CoreOS, 物理机, GKE 以及其他任何地方。</li>
<li>以应用为中心的管理：从传统的硬件上部署操作系统提升到操作系统中部署应用程序。</li>
<li>松耦合、分布式、弹性伸缩、微服务：应用程序被分成更小，更独立的模块，并可以动态管理和部署。</li>
<li>资源隔离：可预测的应用程序性能。</li>
<li>资源利用：高效率和高密度。</li>
</ul>
<h3 id="pod" class="heading-element">
  <a href="#pod" class="heading-mark"></a>Pod</h3><p>Kubernetes 使用 Pod 来管理容器，每个 Pod 可以包含一个或多个紧密关联的容器。</p>
<p>Pod 是一组紧密关联的容器集合，它们共享 PID、IPC、Network 和 UTS namespace，是 Kubernetes 调度的基本单位。Pod 内的多个容器共享网络和文件系统，可以通过进程间通信和文件共享这种简单高效的方式组合完成服务。</p>
<p>在 Kubernetes 中，所有对象都使用 manifest（yaml 或 json）来定义，比如一个简单的 nginx 服务可以定义为 nginx.yaml，它包含一个镜像为 nginx 的容器：</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Pod</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">labels</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">containers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">containerPort</span><span class="p">:</span><span class="w"> </span><span class="m">80</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="node" class="heading-element">
  <a href="#node" class="heading-mark"></a>Node</h3><p>Node 是 Pod 真正运行的主机，可以是物理机，也可以是虚拟机。为了管理 Pod，每个 Node 节点上至少要运行 container runtime（比如 docker 或者 rkt）、kubelet 和 kube-proxy 服务。</p>
<h3 id="namespace" class="heading-element">
  <a href="#namespace" class="heading-mark"></a>Namespace</h3><p>Namespace 是对一组资源和对象的抽象集合，比如可以用来将系统内部的对象划分为不同的项目组或用户组。常见的 pods, services, replication controllers 和 deployments 等都是属于某一个 namespace 的（默认是 default），而 node, persistentVolumes 等则不属于任何 namespace。</p>
<h3 id="service" class="heading-element">
  <a href="#service" class="heading-mark"></a>Service</h3><p>Service 是应用服务的抽象，通过 labels 为应用提供负载均衡和服务发现。匹配 labels 的 Pod IP 和端口列表组成 endpoints，由 kube-proxy 负责将服务 IP 负载均衡到这些 endpoints 上。
每个 Service 都会自动分配一个 cluster IP（仅在集群内部可访问的虚拟地址）和 DNS 名，其他容器可以通过该地址或 DNS 来访问服务，而不需要了解后端容器的运行。
<img loading="lazy" src="https://img-blog.csdnimg.cn/20191118230137955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=,size_16,color_FFFFFF,t_70" alt="k8s-service" srcset="https://img-blog.csdnimg.cn/20191118230137955.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=small, https://img-blog.csdnimg.cn/20191118230137955.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=medium 1.5x, https://img-blog.csdnimg.cn/20191118230137955.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=large 2x" sizes="auto" data-title="k8s-service" style="background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/></p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">8078</span><span class="w"> </span><span class="c"># the port that this service should serve on</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">http</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># the container on each pod to connect to, can be a name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># (e.g. &#39;www&#39;) or a number (e.g. 80)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">targetPort</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">protocol</span><span class="p">:</span><span class="w"> </span><span class="l">TCP</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">selector</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="label" class="heading-element">
  <a href="#label" class="heading-mark"></a>Label</h3><p>Label 是识别 Kubernetes 对象的标签，以 key/value 的方式附加到对象上（key 最长不能超过 63 字节，value 可以为空，也可以是不超过 253 字节的字符串）。</p>
<p>Label 不提供唯一性，并且实际上经常是很多对象（如 Pods）都使用相同的 label 来标志具体的应用。
Label 定义好后其他对象可以使用 Label Selector 来选择一组相同 label 的对象（比如 ReplicaSet 和 Service 用 label 来选择一组 Pod）。Label Selector 支持以下几种方式：</p>
<ul>
<li>等式，如 app=nginx 和 env!=production</li>
<li>集合，如 env in (production, qa)</li>
<li>多个 label（它们之间是 AND 关系），如 app=nginx,env=test</li>
</ul>
<h3 id="annotations" class="heading-element">
  <a href="#annotations" class="heading-mark"></a>Annotations</h3><p>Annotations 是 key/value 形式附加于对象的注解。不同于 Labels 用于标志和选择对象，Annotations 则是用来记录一些附加信息，用来辅助应用部署、安全策略以及调度策略等。比如 deployment 使用 annotations 来记录 rolling update 的状态。</p>
<p>参考来源：</p>
<ol>
<li><a href="https://feisky.gitbooks.io/kubernetes/introduction/"target="_blank" rel="external nofollow noopener noreferrer">https://feisky.gitbooks.io/kubernetes/introduction/<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li><a href="https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/"target="_blank" rel="external nofollow noopener noreferrer">https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
</ol>
]]></description></item><item><title>云原生概述</title><link>https://xzygis.github.io/posts/introduction-of-cloud-native/</link><pubDate>Tue, 28 Jan 2020 15:05:10 +0000</pubDate><author>作者</author><guid>https://xzygis.github.io/posts/introduction-of-cloud-native/</guid><description><![CDATA[<h2 id="云原生的定义" class="heading-element">
  <a href="#%e4%ba%91%e5%8e%9f%e7%94%9f%e7%9a%84%e5%ae%9a%e4%b9%89" class="heading-mark"></a>云原生的定义</h2><p>云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。云原生的代表技术包括容器、服务网格、微服务、不可变基础设施和声明式API。</p>
<p>这些技术能够构建容错性好、易于管理和便于观察的松耦合系统。结合可靠的自动化手段，云原生技术使工程师能够轻松地对系统作出频繁和可预测的重大变更。</p>
<h2 id="云原生的设计哲学" class="heading-element">
  <a href="#%e4%ba%91%e5%8e%9f%e7%94%9f%e7%9a%84%e8%ae%be%e8%ae%a1%e5%93%b2%e5%ad%a6" class="heading-mark"></a>云原生的设计哲学</h2><p>云原生本身甚至不能称为是一种架构，它首先是一种基础设施，运行在其上的应用称作云原生应用，只有符合云原生设计哲学的应用架构才叫云原生应用架构。</p>
<h3 id="云原生的设计理念" class="heading-element">
  <a href="#%e4%ba%91%e5%8e%9f%e7%94%9f%e7%9a%84%e8%ae%be%e8%ae%a1%e7%90%86%e5%bf%b5" class="heading-mark"></a>云原生的设计理念</h3><p>云原生系统的设计理念如下:</p>
<ul>
<li>面向分布式设计（Distribution）：容器、微服务、API 驱动的开发；</li>
<li>面向配置设计（Configuration）：一个镜像，多个环境配置；</li>
<li>面向韧性设计（Resistancy）：故障容忍和自愈；</li>
<li>面向弹性设计（Elasticity）：弹性扩展和对环境变化（负载）做出响应；</li>
<li>面向交付设计（Delivery）：自动拉起，缩短交付时间；</li>
<li>面向性能设计（Performance）：响应式，并发和资源高效利用；</li>
<li>面向自动化设计（Automation）：自动化的 DevOps；</li>
<li>面向诊断性设计（Diagnosability）：集群级别的日志、metric 和追踪；</li>
<li>面向安全性设计（Security）：安全端点、API Gateway、端到端加密；</li>
</ul>
<h3 id="云原生应用程序" class="heading-element">
  <a href="#%e4%ba%91%e5%8e%9f%e7%94%9f%e5%ba%94%e7%94%a8%e7%a8%8b%e5%ba%8f" class="heading-mark"></a>云原生应用程序</h3><p>云原生应用程序被设计为在平台上运行，并设计用于弹性，敏捷性，可操作性和可观察性。弹性包含失败而不是试图阻止它们；它利用了在平台上运行的动态特性。敏捷性允许快速部署和快速迭代。可操作性从应用程序内部控制应用程序生命周期，而不是依赖外部进程和监视器。可观察性提供信息来回答有关应用程序状态的问题。</p>
<p>实现云原生应用程序所需特性的常用方法：</p>
<ul>
<li>微服务</li>
<li>健康报告</li>
<li>遥测数据</li>
<li>弹性</li>
<li>声明式的，而不是命令式的</li>
</ul>
<h4 id="微服务" class="heading-element">
  <a href="#%e5%be%ae%e6%9c%8d%e5%8a%a1" class="heading-mark"></a>微服务</h4><p>微服务 (Microservices) 是一种软件架构风格，它是以专注于单一责任与功能的小型功能区块 (Small Building Blocks) 为基础，利用模块化的方式组合出复杂的大型应用程序，各功能区块使用与语言无关 (Language-Independent/Language agnostic) 的 API 集相互通信。</p>
<p>微服务是一种以业务功能为主的服务设计概念，每一个服务都具有自主运行的业务功能，对外开放不受语言限制的 API (最常用的是 HTTP)，应用程序则是由一个或多个微服务组成。</p>
<h4 id="健康报告" class="heading-element">
  <a href="#%e5%81%a5%e5%ba%b7%e6%8a%a5%e5%91%8a" class="heading-mark"></a>健康报告</h4><p>为了提高云原生应用程序的可操作性，应用程序应该暴露健康检查。开发人员可以将其实施为命令或过程信号，以便应用程序在执行自我检查之后响应，或者更常见的是：通过应用程序提供Web服务，返回HTTP状态码来检查健康状态。</p>
<p>一个很好的例子就是当平台需要知道应用程序何时可以接收流量。在应用程序启动时，如果它不能正确处理流量，它就应该表现为未准备好。</p>
<h4 id="遥测数据" class="heading-element">
  <a href="#%e9%81%a5%e6%b5%8b%e6%95%b0%e6%8d%ae" class="heading-mark"></a>遥测数据</h4><p>遥测数据是进行决策所需的信息。确实，遥测数据可能与健康报告重叠，但它们有不同的用途。健康报告通知我们应用程序生命周期状态，而遥测数据通知我们应用程序业务目标。</p>
<p>测量的指标有时称为服务级指标（SLI）或关键性能指标（KPI）。这些是特定于应用程序的数据，可以确保应用程序的性能处于服务级别目标（SLO）内。</p>
<h4 id="弹性" class="heading-element">
  <a href="#%e5%bc%b9%e6%80%a7" class="heading-mark"></a>弹性</h4><p>一旦你有遥测和监测数据，你需要确保你的应用程序对故障有适应能力。弹性是基础设施的责任，但云原生应用程序也需要承担部分工作。在云原生应用程序中考虑弹性的两个主要方面：为失败设计和优雅降级。</p>
<h5 id="为失败设计" class="heading-element">
  <a href="#%e4%b8%ba%e5%a4%b1%e8%b4%a5%e8%ae%be%e8%ae%a1" class="heading-mark"></a>为失败设计</h5><p>设计一个以失败期望为目标的应用程序将比假定可用性的应用程序更具防御性。当故障不可避免时，将会有额外的检查，故障模式和日志内置到应用程序中。</p>
<h5 id="优雅降级" class="heading-element">
  <a href="#%e4%bc%98%e9%9b%85%e9%99%8d%e7%ba%a7" class="heading-mark"></a>优雅降级</h5><p>云原生应用程序处理过载的一种方式。</p>
<h4 id="声明式非命令式" class="heading-element">
  <a href="#%e5%a3%b0%e6%98%8e%e5%bc%8f%e9%9d%9e%e5%91%bd%e4%bb%a4%e5%bc%8f" class="heading-mark"></a>声明式，非命令式</h4><p>声明式编程是一种编程范式，与命令式编程相对立。它描述目标的性质，让电脑明白目标，而非流程。声明式编程不用告诉电脑问题领域，从而避免随之而来的副作用。而命令式编程则需要用算法来明确的指出每一步该怎么做。</p>
<p>声明式通信模型规范了通信模型，并且它将功能实现从应用程序转移到远程API或服务端点，从而实现某种状态到达期望状态。这有助于简化应用程序，并使它们彼此的行为更具可预测性。</p>
<p>例子：SQL数据库
其实你很早就接触过声明式编程语言， SQL语言就是很典型的例子：</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="k">user</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">user_name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Ben</span></span></span></code></pre></td></tr></table>
</div>
</div><p>上面是一个很普通的SQL查询语句，我只只声明我想要找一个叫Ben的用户（What) , 就是不说SQL该怎么（How）去寻找怎么做。接下来我们看看如果用命令式语言写会是什么样的：</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">//user=[{user_name:&#39;ou&#39;,user_id=1},.....]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">var</span> <span class="nx">user</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">user</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nx">user</span><span class="p">.</span><span class="nx">user_name</span> <span class="o">==</span> <span class="s2">&#34;Ben&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">         <span class="nx">print</span><span class="p">(</span><span class="s2">&#34;find&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">         <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div><p>通过上面的对比你可以看出声明式语言的优势-短小精悍，你并不会知道程序的控制流（control flow）我们不需要告诉程序如何去寻找（How），而是只告诉程序我们想要的结果（What），让程序自己来解决过程（How）。当然SQL具体的细节还是用命令式的编程风格来实现的。</p>
<h2 id="play-with-kubernetes" class="heading-element">
  <a href="#play-with-kubernetes" class="heading-mark"></a>Play with Kubernetes</h2><h3 id="创建kubernetes集群" class="heading-element">
  <a href="#%e5%88%9b%e5%bb%bakubernetes%e9%9b%86%e7%be%a4" class="heading-mark"></a>创建Kubernetes集群</h3><p>登陆Play with Kubernetes，启动第一个实例作为Master节点，在web终端上执行：</p>
<ol>
<li>初始化master节点：</li>
</ol>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubeadm init --apiserver-advertise-address <span class="k">$(</span>hostname -i<span class="k">)</span></span></span></code></pre></td></tr></table>
</div>
</div><p>输出如下：</p>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="p">[</span><span class="n">node1</span> <span class="o">~</span><span class="p">]</span><span class="o">$</span> <span class="n">kubeadm</span> <span class="n">init</span> <span class="o">--</span><span class="n">apiserver</span><span class="o">-</span><span class="n">advertise</span><span class="o">-</span><span class="n">address</span> <span class="o">$</span><span class="p">(</span><span class="n">hostname</span> <span class="o">-</span><span class="n">i</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Initializing</span> <span class="n">machine</span> <span class="n">ID</span> <span class="n">from</span> <span class="n">random</span> <span class="n">generator</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">init</span><span class="p">]</span> <span class="n">using</span> <span class="n">Kubernetes</span> <span class="n">version</span><span class="p">:</span> <span class="n">v1</span><span class="o">.</span><span class="mf">11.10</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">preflight</span><span class="p">]</span> <span class="n">running</span> <span class="n">pre</span><span class="o">-</span><span class="n">flight</span> <span class="n">checks</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="n">WARNING</span> <span class="n">Service</span><span class="o">-</span><span class="n">Docker</span><span class="p">]:</span> <span class="n">docker</span> <span class="n">service</span> <span class="n">is</span> <span class="ow">not</span> <span class="n">active</span><span class="p">,</span> <span class="n">please</span> <span class="n">run</span> <span class="s1">&#39;systemctl start docker.service&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="n">WARNING</span> <span class="n">FileContent</span><span class="o">--</span><span class="n">proc</span><span class="o">-</span><span class="n">sys</span><span class="o">-</span><span class="n">net</span><span class="o">-</span><span class="n">bridge</span><span class="o">-</span><span class="n">bridge</span><span class="o">-</span><span class="n">nf</span><span class="o">-</span><span class="n">call</span><span class="o">-</span><span class="n">iptables</span><span class="p">]:</span> <span class="o">/</span><span class="n">proc</span><span class="o">/</span><span class="n">sys</span><span class="o">/</span><span class="n">net</span><span class="o">/</span><span class="n">bridge</span><span class="o">/</span><span class="n">bridge</span><span class="o">-</span><span class="n">nf</span><span class="o">-</span><span class="n">call</span><span class="o">-</span><span class="n">iptables</span> <span class="n">does</span> <span class="ow">not</span> <span class="n">exist</span>
</span></span><span class="line"><span class="cl"><span class="n">I1117</span> <span class="mi">13</span><span class="p">:</span><span class="mi">53</span><span class="p">:</span><span class="mf">18.409493</span>     <span class="mi">885</span> <span class="n">kernel_validator</span><span class="o">.</span><span class="n">go</span><span class="p">:</span><span class="mi">81</span><span class="p">]</span> <span class="n">Validating</span> <span class="n">kernel</span> <span class="n">version</span>
</span></span><span class="line"><span class="cl"><span class="n">I1117</span> <span class="mi">13</span><span class="p">:</span><span class="mi">53</span><span class="p">:</span><span class="mf">18.409685</span>     <span class="mi">885</span> <span class="n">kernel_validator</span><span class="o">.</span><span class="n">go</span><span class="p">:</span><span class="mi">96</span><span class="p">]</span> <span class="n">Validating</span> <span class="n">kernel</span> <span class="n">config</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">preflight</span><span class="p">]</span> <span class="n">The</span> <span class="n">system</span> <span class="n">verification</span> <span class="n">failed</span><span class="o">.</span> <span class="n">Printing</span> <span class="n">the</span> <span class="n">output</span> <span class="n">from</span> <span class="n">the</span> <span class="n">verification</span><span class="p">:</span>
</span></span><span class="line"><span class="cl"><span class="n">KERNEL_VERSION</span><span class="p">:</span> <span class="mf">4.4</span><span class="o">.</span><span class="mi">0</span><span class="o">-</span><span class="mi">148</span><span class="o">-</span><span class="n">generic</span>
</span></span><span class="line"><span class="cl"><span class="n">DOCKER_VERSION</span><span class="p">:</span> <span class="mf">18.06</span><span class="o">.</span><span class="mi">1</span><span class="o">-</span><span class="n">ce</span>
</span></span><span class="line"><span class="cl"><span class="ne">OS</span><span class="p">:</span> <span class="n">Linux</span>
</span></span><span class="line"><span class="cl"><span class="n">CGROUPS_CPU</span><span class="p">:</span> <span class="n">enabled</span>
</span></span><span class="line"><span class="cl"><span class="n">CGROUPS_CPUACCT</span><span class="p">:</span> <span class="n">enabled</span>
</span></span><span class="line"><span class="cl"><span class="n">CGROUPS_CPUSET</span><span class="p">:</span> <span class="n">enabled</span>
</span></span><span class="line"><span class="cl"><span class="n">CGROUPS_DEVICES</span><span class="p">:</span> <span class="n">enabled</span>
</span></span><span class="line"><span class="cl"><span class="n">CGROUPS_FREEZER</span><span class="p">:</span> <span class="n">enabled</span>
</span></span><span class="line"><span class="cl"><span class="n">CGROUPS_MEMORY</span><span class="p">:</span> <span class="n">enabled</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="n">WARNING</span> <span class="n">SystemVerification</span><span class="p">]:</span> <span class="n">docker</span> <span class="n">version</span> <span class="n">is</span> <span class="n">greater</span> <span class="n">than</span> <span class="n">the</span> <span class="n">most</span> <span class="n">recently</span> <span class="n">validated</span> <span class="n">version</span><span class="o">.</span> <span class="n">Docker</span> <span class="n">version</span><span class="p">:</span> <span class="mf">18.06</span><span class="o">.</span><span class="mi">1</span><span class="o">-</span><span class="n">ce</span><span class="o">.</span> <span class="n">Max</span> <span class="n">validated</span> <span class="n">version</span><span class="p">:</span> <span class="mf">17.03</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="n">WARNING</span> <span class="n">SystemVerification</span><span class="p">]:</span> <span class="n">failed</span> <span class="n">to</span> <span class="n">parse</span> <span class="n">kernel</span> <span class="n">config</span><span class="p">:</span> <span class="n">unable</span> <span class="n">to</span> <span class="nb">load</span> <span class="n">kernel</span> <span class="n">module</span> <span class="s2">&#34;configs&#34;</span><span class="p">:</span> <span class="n">output</span> <span class="o">-</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="n">err</span> <span class="o">-</span> <span class="n">exit</span> <span class="n">status</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">preflight</span><span class="o">/</span><span class="n">images</span><span class="p">]</span> <span class="n">Pulling</span> <span class="n">images</span> <span class="n">required</span> <span class="k">for</span> <span class="n">setting</span> <span class="n">up</span> <span class="n">a</span> <span class="n">Kubernetes</span> <span class="n">cluster</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">preflight</span><span class="o">/</span><span class="n">images</span><span class="p">]</span> <span class="n">This</span> <span class="n">might</span> <span class="n">take</span> <span class="n">a</span> <span class="n">minute</span> <span class="ow">or</span> <span class="n">two</span><span class="p">,</span> <span class="n">depending</span> <span class="n">on</span> <span class="n">the</span> <span class="n">speed</span> <span class="n">of</span> <span class="n">your</span> <span class="n">internet</span> <span class="n">connection</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">preflight</span><span class="o">/</span><span class="n">images</span><span class="p">]</span> <span class="n">You</span> <span class="n">can</span> <span class="n">also</span> <span class="n">perform</span> <span class="n">this</span> <span class="n">action</span> <span class="ow">in</span> <span class="n">beforehand</span> <span class="n">using</span> <span class="s1">&#39;kubeadm config images pull&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">kubelet</span><span class="p">]</span> <span class="n">Writing</span> <span class="n">kubelet</span> <span class="n">environment</span> <span class="n">file</span> <span class="n">with</span> <span class="n">flags</span> <span class="n">to</span> <span class="n">file</span> <span class="s2">&#34;/var/lib/kubelet/kubeadm-flags.env&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">kubelet</span><span class="p">]</span> <span class="n">Writing</span> <span class="n">kubelet</span> <span class="n">configuration</span> <span class="n">to</span> <span class="n">file</span> <span class="s2">&#34;/var/lib/kubelet/config.yaml&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">preflight</span><span class="p">]</span> <span class="n">Activating</span> <span class="n">the</span> <span class="n">kubelet</span> <span class="n">service</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">Generated</span> <span class="n">ca</span> <span class="n">certificate</span> <span class="ow">and</span> <span class="n">key</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">Generated</span> <span class="n">apiserver</span> <span class="n">certificate</span> <span class="ow">and</span> <span class="n">key</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">apiserver</span> <span class="n">serving</span> <span class="n">cert</span> <span class="n">is</span> <span class="n">signed</span> <span class="k">for</span> <span class="n">DNS</span> <span class="n">names</span> <span class="p">[</span><span class="n">node1</span> <span class="n">kubernetes</span> <span class="n">kubernetes</span><span class="o">.</span><span class="n">default</span> <span class="n">kubernetes</span><span class="o">.</span><span class="n">default</span><span class="o">.</span><span class="n">svc</span> <span class="n">kubernetes</span><span class="o">.</span><span class="n">default</span><span class="o">.</span><span class="n">svc</span><span class="o">.</span><span class="n">cluster</span><span class="o">.</span><span class="n">local</span><span class="p">]</span> <span class="ow">and</span> <span class="n">IPs</span> <span class="p">[</span><span class="mf">10.96</span><span class="o">.</span><span class="mf">0.1</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">0.18</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">Generated</span> <span class="n">apiserver</span><span class="o">-</span><span class="n">kubelet</span><span class="o">-</span><span class="n">client</span> <span class="n">certificate</span> <span class="ow">and</span> <span class="n">key</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">Generated</span> <span class="n">sa</span> <span class="n">key</span> <span class="ow">and</span> <span class="n">public</span> <span class="n">key</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">Generated</span> <span class="n">front</span><span class="o">-</span><span class="n">proxy</span><span class="o">-</span><span class="n">ca</span> <span class="n">certificate</span> <span class="ow">and</span> <span class="n">key</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">Generated</span> <span class="n">front</span><span class="o">-</span><span class="n">proxy</span><span class="o">-</span><span class="n">client</span> <span class="n">certificate</span> <span class="ow">and</span> <span class="n">key</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">Generated</span> <span class="n">etcd</span><span class="o">/</span><span class="n">ca</span> <span class="n">certificate</span> <span class="ow">and</span> <span class="n">key</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">Generated</span> <span class="n">etcd</span><span class="o">/</span><span class="n">server</span> <span class="n">certificate</span> <span class="ow">and</span> <span class="n">key</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">etcd</span><span class="o">/</span><span class="n">server</span> <span class="n">serving</span> <span class="n">cert</span> <span class="n">is</span> <span class="n">signed</span> <span class="k">for</span> <span class="n">DNS</span> <span class="n">names</span> <span class="p">[</span><span class="n">node1</span> <span class="n">localhost</span><span class="p">]</span> <span class="ow">and</span> <span class="n">IPs</span> <span class="p">[</span><span class="mf">127.0</span><span class="o">.</span><span class="mf">0.1</span> <span class="p">::</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">Generated</span> <span class="n">etcd</span><span class="o">/</span><span class="n">peer</span> <span class="n">certificate</span> <span class="ow">and</span> <span class="n">key</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">etcd</span><span class="o">/</span><span class="n">peer</span> <span class="n">serving</span> <span class="n">cert</span> <span class="n">is</span> <span class="n">signed</span> <span class="k">for</span> <span class="n">DNS</span> <span class="n">names</span> <span class="p">[</span><span class="n">node1</span> <span class="n">localhost</span><span class="p">]</span> <span class="ow">and</span> <span class="n">IPs</span> <span class="p">[</span><span class="mf">192.168</span><span class="o">.</span><span class="mf">0.18</span> <span class="mf">127.0</span><span class="o">.</span><span class="mf">0.1</span> <span class="p">::</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">Generated</span> <span class="n">etcd</span><span class="o">/</span><span class="n">healthcheck</span><span class="o">-</span><span class="n">client</span> <span class="n">certificate</span> <span class="ow">and</span> <span class="n">key</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">Generated</span> <span class="n">apiserver</span><span class="o">-</span><span class="n">etcd</span><span class="o">-</span><span class="n">client</span> <span class="n">certificate</span> <span class="ow">and</span> <span class="n">key</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">certificates</span><span class="p">]</span> <span class="n">valid</span> <span class="n">certificates</span> <span class="ow">and</span> <span class="n">keys</span> <span class="n">now</span> <span class="n">exist</span> <span class="ow">in</span> <span class="s2">&#34;/etc/kubernetes/pki&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">kubeconfig</span><span class="p">]</span> <span class="n">Wrote</span> <span class="n">KubeConfig</span> <span class="n">file</span> <span class="n">to</span> <span class="n">disk</span><span class="p">:</span> <span class="s2">&#34;/etc/kubernetes/admin.conf&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">kubeconfig</span><span class="p">]</span> <span class="n">Wrote</span> <span class="n">KubeConfig</span> <span class="n">file</span> <span class="n">to</span> <span class="n">disk</span><span class="p">:</span> <span class="s2">&#34;/etc/kubernetes/kubelet.conf&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">kubeconfig</span><span class="p">]</span> <span class="n">Wrote</span> <span class="n">KubeConfig</span> <span class="n">file</span> <span class="n">to</span> <span class="n">disk</span><span class="p">:</span> <span class="s2">&#34;/etc/kubernetes/controller-manager.conf&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">kubeconfig</span><span class="p">]</span> <span class="n">Wrote</span> <span class="n">KubeConfig</span> <span class="n">file</span> <span class="n">to</span> <span class="n">disk</span><span class="p">:</span> <span class="s2">&#34;/etc/kubernetes/scheduler.conf&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">controlplane</span><span class="p">]</span> <span class="n">wrote</span> <span class="n">Static</span> <span class="n">Pod</span> <span class="n">manifest</span> <span class="k">for</span> <span class="n">component</span> <span class="n">kube</span><span class="o">-</span><span class="n">apiserver</span> <span class="n">to</span> <span class="s2">&#34;/etc/kubernetes/manifests/kube-apiserver.yaml&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">controlplane</span><span class="p">]</span> <span class="n">wrote</span> <span class="n">Static</span> <span class="n">Pod</span> <span class="n">manifest</span> <span class="k">for</span> <span class="n">component</span> <span class="n">kube</span><span class="o">-</span><span class="n">controller</span><span class="o">-</span><span class="n">manager</span> <span class="n">to</span> <span class="s2">&#34;/etc/kubernetes/manifests/kube-controller-manager.yaml&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">controlplane</span><span class="p">]</span> <span class="n">wrote</span> <span class="n">Static</span> <span class="n">Pod</span> <span class="n">manifest</span> <span class="k">for</span> <span class="n">component</span> <span class="n">kube</span><span class="o">-</span><span class="n">scheduler</span> <span class="n">to</span> <span class="s2">&#34;/etc/kubernetes/manifests/kube-scheduler.yaml&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">etcd</span><span class="p">]</span> <span class="n">Wrote</span> <span class="n">Static</span> <span class="n">Pod</span> <span class="n">manifest</span> <span class="k">for</span> <span class="n">a</span> <span class="n">local</span> <span class="n">etcd</span> <span class="n">instance</span> <span class="n">to</span> <span class="s2">&#34;/etc/kubernetes/manifests/etcd.yaml&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">init</span><span class="p">]</span> <span class="n">waiting</span> <span class="k">for</span> <span class="n">the</span> <span class="n">kubelet</span> <span class="n">to</span> <span class="n">boot</span> <span class="n">up</span> <span class="n">the</span> <span class="n">control</span> <span class="n">plane</span> <span class="n">as</span> <span class="n">Static</span> <span class="n">Pods</span> <span class="n">from</span> <span class="n">directory</span> <span class="s2">&#34;/etc/kubernetes/manifests&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">init</span><span class="p">]</span> <span class="n">this</span> <span class="n">might</span> <span class="n">take</span> <span class="n">a</span> <span class="n">minute</span> <span class="ow">or</span> <span class="n">longer</span> <span class="k">if</span> <span class="n">the</span> <span class="n">control</span> <span class="n">plane</span> <span class="n">images</span> <span class="n">have</span> <span class="n">to</span> <span class="n">be</span> <span class="n">pulled</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">apiclient</span><span class="p">]</span> <span class="n">All</span> <span class="n">control</span> <span class="n">plane</span> <span class="n">components</span> <span class="n">are</span> <span class="n">healthy</span> <span class="n">after</span> <span class="mf">51.503514</span> <span class="n">seconds</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">uploadconfig</span><span class="p">]</span> <span class="n">storing</span> <span class="n">the</span> <span class="n">configuration</span> <span class="n">used</span> <span class="ow">in</span> <span class="n">ConfigMap</span> <span class="s2">&#34;kubeadm-config&#34;</span> <span class="ow">in</span> <span class="n">the</span> <span class="s2">&#34;kube-system&#34;</span> <span class="n">Namespace</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">kubelet</span><span class="p">]</span> <span class="n">Creating</span> <span class="n">a</span> <span class="n">ConfigMap</span> <span class="s2">&#34;kubelet-config-1.11&#34;</span> <span class="ow">in</span> <span class="n">namespace</span> <span class="n">kube</span><span class="o">-</span><span class="n">system</span> <span class="n">with</span> <span class="n">the</span> <span class="n">configuration</span> <span class="k">for</span> <span class="n">the</span> <span class="n">kubelets</span> <span class="ow">in</span> <span class="n">the</span> <span class="n">cluster</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">markmaster</span><span class="p">]</span> <span class="n">Marking</span> <span class="n">the</span> <span class="n">node</span> <span class="n">node1</span> <span class="n">as</span> <span class="n">master</span> <span class="n">by</span> <span class="n">adding</span> <span class="n">the</span> <span class="n">label</span> <span class="s2">&#34;node-role.kubernetes.io/master=&#39;&#39;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">markmaster</span><span class="p">]</span> <span class="n">Marking</span> <span class="n">the</span> <span class="n">node</span> <span class="n">node1</span> <span class="n">as</span> <span class="n">master</span> <span class="n">by</span> <span class="n">adding</span> <span class="n">the</span> <span class="n">taints</span> <span class="p">[</span><span class="n">node</span><span class="o">-</span><span class="n">role</span><span class="o">.</span><span class="n">kubernetes</span><span class="o">.</span><span class="n">io</span><span class="o">/</span><span class="n">master</span><span class="p">:</span><span class="n">NoSchedule</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">patchnode</span><span class="p">]</span> <span class="n">Uploading</span> <span class="n">the</span> <span class="n">CRI</span> <span class="n">Socket</span> <span class="n">information</span> <span class="s2">&#34;/var/run/dockershim.sock&#34;</span> <span class="n">to</span> <span class="n">the</span> <span class="ne">Node</span> <span class="n">API</span> <span class="n">object</span> <span class="s2">&#34;node1&#34;</span> <span class="n">as</span> <span class="n">an</span> <span class="n">annotation</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">bootstraptoken</span><span class="p">]</span> <span class="n">using</span> <span class="n">token</span><span class="p">:</span> <span class="mi">5</span><span class="n">f1nyz</span><span class="o">.</span><span class="mi">351</span><span class="n">cet8vt4g2ix78</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">bootstraptoken</span><span class="p">]</span> <span class="n">configured</span> <span class="n">RBAC</span> <span class="n">rules</span> <span class="n">to</span> <span class="n">allow</span> <span class="ne">Node</span> <span class="n">Bootstrap</span> <span class="n">tokens</span> <span class="n">to</span> <span class="n">post</span> <span class="n">CSRs</span> <span class="ow">in</span> <span class="n">order</span> <span class="k">for</span> <span class="n">nodes</span> <span class="n">to</span> <span class="n">get</span> <span class="n">long</span> <span class="n">term</span> <span class="n">certificate</span> <span class="n">credentials</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">bootstraptoken</span><span class="p">]</span> <span class="n">configured</span> <span class="n">RBAC</span> <span class="n">rules</span> <span class="n">to</span> <span class="n">allow</span> <span class="n">the</span> <span class="n">csrapprover</span> <span class="n">controller</span> <span class="n">automatically</span> <span class="n">approve</span> <span class="n">CSRs</span> <span class="n">from</span> <span class="n">a</span> <span class="ne">Node</span> <span class="n">Bootstrap</span> <span class="n">Token</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">bootstraptoken</span><span class="p">]</span> <span class="n">configured</span> <span class="n">RBAC</span> <span class="n">rules</span> <span class="n">to</span> <span class="n">allow</span> <span class="n">certificate</span> <span class="n">rotation</span> <span class="k">for</span> <span class="n">all</span> <span class="n">node</span> <span class="n">client</span> <span class="n">certificates</span> <span class="ow">in</span> <span class="n">the</span> <span class="n">cluster</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">bootstraptoken</span><span class="p">]</span> <span class="n">creating</span> <span class="n">the</span> <span class="s2">&#34;cluster-info&#34;</span> <span class="n">ConfigMap</span> <span class="ow">in</span> <span class="n">the</span> <span class="s2">&#34;kube-public&#34;</span> <span class="n">namespace</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">addons</span><span class="p">]</span> <span class="n">Applied</span> <span class="n">essential</span> <span class="n">addon</span><span class="p">:</span> <span class="n">CoreDNS</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">addons</span><span class="p">]</span> <span class="n">Applied</span> <span class="n">essential</span> <span class="n">addon</span><span class="p">:</span> <span class="n">kube</span><span class="o">-</span><span class="n">proxy</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Your</span> <span class="n">Kubernetes</span> <span class="n">master</span> <span class="n">has</span> <span class="n">initialized</span> <span class="n">successfully</span><span class="o">!</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">To</span> <span class="n">start</span> <span class="n">using</span> <span class="n">your</span> <span class="n">cluster</span><span class="p">,</span> <span class="n">you</span> <span class="n">need</span> <span class="n">to</span> <span class="n">run</span> <span class="n">the</span> <span class="n">following</span> <span class="n">as</span> <span class="n">a</span> <span class="n">regular</span> <span class="n">user</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="n">mkdir</span> <span class="o">-</span><span class="n">p</span> <span class="o">$</span><span class="n">HOME</span><span class="o">/.</span><span class="n">kube</span>
</span></span><span class="line"><span class="cl">  <span class="n">sudo</span> <span class="n">cp</span> <span class="o">-</span><span class="n">i</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">kubernetes</span><span class="o">/</span><span class="n">admin</span><span class="o">.</span><span class="n">conf</span> <span class="o">$</span><span class="n">HOME</span><span class="o">/.</span><span class="n">kube</span><span class="o">/</span><span class="n">config</span>
</span></span><span class="line"><span class="cl">  <span class="n">sudo</span> <span class="n">chown</span> <span class="o">$</span><span class="p">(</span><span class="n">id</span> <span class="o">-</span><span class="n">u</span><span class="p">):</span><span class="o">$</span><span class="p">(</span><span class="n">id</span> <span class="o">-</span><span class="n">g</span><span class="p">)</span> <span class="o">$</span><span class="n">HOME</span><span class="o">/.</span><span class="n">kube</span><span class="o">/</span><span class="n">config</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">You</span> <span class="n">should</span> <span class="n">now</span> <span class="n">deploy</span> <span class="n">a</span> <span class="n">pod</span> <span class="n">network</span> <span class="n">to</span> <span class="n">the</span> <span class="n">cluster</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="n">Run</span> <span class="s2">&#34;kubectl apply -f [podnetwork].yaml&#34;</span> <span class="n">with</span> <span class="n">one</span> <span class="n">of</span> <span class="n">the</span> <span class="n">options</span> <span class="n">listed</span> <span class="n">at</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">  <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">kubernetes</span><span class="o">.</span><span class="n">io</span><span class="o">/</span><span class="n">docs</span><span class="o">/</span><span class="n">concepts</span><span class="o">/</span><span class="n">cluster</span><span class="o">-</span><span class="n">administration</span><span class="o">/</span><span class="n">addons</span><span class="o">/</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">You</span> <span class="n">can</span> <span class="n">now</span> <span class="n">join</span> <span class="n">any</span> <span class="n">number</span> <span class="n">of</span> <span class="n">machines</span> <span class="n">by</span> <span class="n">running</span> <span class="n">the</span> <span class="n">following</span> <span class="n">on</span> <span class="n">each</span> <span class="n">node</span>
</span></span><span class="line"><span class="cl"><span class="n">as</span> <span class="n">root</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="n">kubeadm</span> <span class="n">join</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">0.18</span><span class="p">:</span><span class="mi">6443</span> <span class="o">--</span><span class="n">token</span> <span class="mi">5</span><span class="n">f1nyz</span><span class="o">.</span><span class="mi">351</span><span class="n">cet8vt4g2ix78</span> <span class="o">--</span><span class="n">discovery</span><span class="o">-</span><span class="n">token</span><span class="o">-</span><span class="n">ca</span><span class="o">-</span><span class="n">cert</span><span class="o">-</span><span class="nb">hash</span> <span class="n">sha256</span><span class="p">:</span><span class="n">d105d049cf090f7814473e5554b79e09cd13e4acfd8a56b09754ba9181d08fd8</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Waiting</span> <span class="k">for</span> <span class="n">api</span> <span class="n">server</span> <span class="n">to</span> <span class="n">startup</span>
</span></span><span class="line"><span class="cl"><span class="n">Warning</span><span class="p">:</span> <span class="n">kubectl</span> <span class="n">apply</span> <span class="n">should</span> <span class="n">be</span> <span class="n">used</span> <span class="n">on</span> <span class="n">resource</span> <span class="n">created</span> <span class="n">by</span> <span class="n">either</span> <span class="n">kubectl</span> <span class="n">create</span> <span class="o">--</span><span class="n">save</span><span class="o">-</span><span class="n">config</span> <span class="ow">or</span> <span class="n">kubectl</span> <span class="n">apply</span>
</span></span><span class="line"><span class="cl"><span class="n">daemonset</span><span class="o">.</span><span class="n">extensions</span><span class="o">/</span><span class="n">kube</span><span class="o">-</span><span class="n">proxy</span> <span class="n">configured</span>
</span></span><span class="line"><span class="cl"><span class="n">No</span> <span class="n">resources</span> <span class="n">found</span></span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>初始化集群网络：</li>
</ol>
<div class="highlight" id="id-5"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl apply -n kube-system -f  <span class="s2">&#34;https://cloud.weave.works/k8s/net?k8s-version=</span><span class="k">$(</span>kubectl version <span class="p">|</span> base64 <span class="p">|</span> tr -d <span class="s1">&#39;\n&#39;</span><span class="k">)</span><span class="s2">&#34;</span></span></span></code></pre></td></tr></table>
</div>
</div><p>输出如下：</p>
<div class="highlight" id="id-6"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">serviceaccount/weave-net created
</span></span><span class="line"><span class="cl">clusterrole.rbac.authorization.k8s.io/weave-net created
</span></span><span class="line"><span class="cl">clusterrolebinding.rbac.authorization.k8s.io/weave-net created
</span></span><span class="line"><span class="cl">role.rbac.authorization.k8s.io/weave-net created
</span></span><span class="line"><span class="cl">rolebinding.rbac.authorization.k8s.io/weave-net created
</span></span><span class="line"><span class="cl">daemonset.apps/weave-net created</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>执行下列初始化命令：</li>
</ol>
<div class="highlight" id="id-7"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">mkdir -p <span class="nv">$HOME</span>/.kube
</span></span><span class="line"><span class="cl">cp -i /etc/kubernetes/admin.conf <span class="nv">$HOME</span>/.kube/config
</span></span><span class="line"><span class="cl">chown <span class="k">$(</span>id -u<span class="k">)</span>:<span class="k">$(</span>id -g<span class="k">)</span> <span class="nv">$HOME</span>/.kube/config</span></span></code></pre></td></tr></table>
</div>
</div><ol start="4">
<li>根据master节点上的提示，在新的web终端上执行：</li>
</ol>
<div class="highlight" id="id-8"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubeadm join 192.168.0.18:6443 --token 5f1nyz.351cet8vt4g2ix78 --discovery-token-ca-cert-hash sha256:d105d049cf090f7814473e5554b79e09cd13e4acfd8a56b09754ba9181d08fd8</span></span></code></pre></td></tr></table>
</div>
</div><p>输出如下：</p>
<div class="highlight" id="id-9"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="p">[</span><span class="n">preflight</span><span class="p">]</span> <span class="n">running</span> <span class="n">pre</span><span class="o">-</span><span class="n">flight</span> <span class="n">checks</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="n">WARNING</span> <span class="n">DirAvailable</span><span class="o">--</span><span class="n">etc</span><span class="o">-</span><span class="n">kubernetes</span><span class="o">-</span><span class="n">manifests</span><span class="p">]:</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">kubernetes</span><span class="o">/</span><span class="n">manifests</span> <span class="n">is</span> <span class="ow">not</span> <span class="n">empty</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="n">WARNING</span> <span class="n">FileAvailable</span><span class="o">--</span><span class="n">etc</span><span class="o">-</span><span class="n">kubernetes</span><span class="o">-</span><span class="n">pki</span><span class="o">-</span><span class="n">ca</span><span class="o">.</span><span class="n">crt</span><span class="p">]:</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">kubernetes</span><span class="o">/</span><span class="n">pki</span><span class="o">/</span><span class="n">ca</span><span class="o">.</span><span class="n">crt</span> <span class="n">already</span> <span class="n">exists</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="n">WARNING</span> <span class="n">FileAvailable</span><span class="o">--</span><span class="n">etc</span><span class="o">-</span><span class="n">kubernetes</span><span class="o">-</span><span class="n">kubelet</span><span class="o">.</span><span class="n">conf</span><span class="p">]:</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">kubernetes</span><span class="o">/</span><span class="n">kubelet</span><span class="o">.</span><span class="n">conf</span> <span class="n">already</span> <span class="n">exists</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="n">WARNING</span> <span class="n">RequiredIPVSKernelModulesAvailable</span><span class="p">]:</span> <span class="n">error</span> <span class="n">getting</span> <span class="n">required</span> <span class="n">builtin</span> <span class="n">kernel</span> <span class="n">modules</span><span class="p">:</span> <span class="n">exit</span> <span class="n">status</span> <span class="mi">1</span><span class="p">(</span><span class="n">cut</span><span class="p">:</span> <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">modules</span><span class="o">/</span><span class="mf">4.4</span><span class="o">.</span><span class="mi">0</span><span class="o">-</span><span class="mi">166</span><span class="o">-</span><span class="n">generic</span><span class="o">/</span><span class="n">modules</span><span class="o">.</span><span class="n">builtin</span><span class="p">:</span> <span class="n">No</span> <span class="n">such</span> <span class="n">file</span> <span class="ow">or</span> <span class="n">directory</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="n">WARNING</span> <span class="n">Service</span><span class="o">-</span><span class="n">Docker</span><span class="p">]:</span> <span class="n">docker</span> <span class="n">service</span> <span class="n">is</span> <span class="ow">not</span> <span class="n">active</span><span class="p">,</span> <span class="n">please</span> <span class="n">run</span> <span class="s1">&#39;systemctl start docker.service&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="n">WARNING</span> <span class="n">FileContent</span><span class="o">--</span><span class="n">proc</span><span class="o">-</span><span class="n">sys</span><span class="o">-</span><span class="n">net</span><span class="o">-</span><span class="n">bridge</span><span class="o">-</span><span class="n">bridge</span><span class="o">-</span><span class="n">nf</span><span class="o">-</span><span class="n">call</span><span class="o">-</span><span class="n">iptables</span><span class="p">]:</span> <span class="o">/</span><span class="n">proc</span><span class="o">/</span><span class="n">sys</span><span class="o">/</span><span class="n">net</span><span class="o">/</span><span class="n">bridge</span><span class="o">/</span><span class="n">bridge</span><span class="o">-</span><span class="n">nf</span><span class="o">-</span><span class="n">call</span><span class="o">-</span><span class="n">iptables</span> <span class="n">does</span> <span class="ow">not</span> <span class="n">exist</span>
</span></span><span class="line"><span class="cl"><span class="n">I1117</span> <span class="mi">14</span><span class="p">:</span><span class="mi">09</span><span class="p">:</span><span class="mf">02.416363</span>    <span class="mi">7243</span> <span class="n">kernel_validator</span><span class="o">.</span><span class="n">go</span><span class="p">:</span><span class="mi">81</span><span class="p">]</span> <span class="n">Validating</span> <span class="n">kernel</span> <span class="n">version</span>
</span></span><span class="line"><span class="cl"><span class="n">I1117</span> <span class="mi">14</span><span class="p">:</span><span class="mi">09</span><span class="p">:</span><span class="mf">02.419283</span>    <span class="mi">7243</span> <span class="n">kernel_validator</span><span class="o">.</span><span class="n">go</span><span class="p">:</span><span class="mi">96</span><span class="p">]</span> <span class="n">Validating</span> <span class="n">kernel</span> <span class="n">config</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">preflight</span><span class="p">]</span> <span class="n">The</span> <span class="n">system</span> <span class="n">verification</span> <span class="n">failed</span><span class="o">.</span> <span class="n">Printing</span> <span class="n">the</span> <span class="n">output</span> <span class="n">from</span> <span class="n">the</span> <span class="n">verification</span><span class="p">:</span>
</span></span><span class="line"><span class="cl"><span class="n">KERNEL_VERSION</span><span class="p">:</span> <span class="mf">4.4</span><span class="o">.</span><span class="mi">0</span><span class="o">-</span><span class="mi">166</span><span class="o">-</span><span class="n">generic</span>
</span></span><span class="line"><span class="cl"><span class="n">DOCKER_VERSION</span><span class="p">:</span> <span class="mf">18.06</span><span class="o">.</span><span class="mi">1</span><span class="o">-</span><span class="n">ce</span>
</span></span><span class="line"><span class="cl"><span class="ne">OS</span><span class="p">:</span> <span class="n">Linux</span>
</span></span><span class="line"><span class="cl"><span class="n">CGROUPS_CPU</span><span class="p">:</span> <span class="n">enabled</span>
</span></span><span class="line"><span class="cl"><span class="n">CGROUPS_CPUACCT</span><span class="p">:</span> <span class="n">enabled</span>
</span></span><span class="line"><span class="cl"><span class="n">CGROUPS_CPUSET</span><span class="p">:</span> <span class="n">enabled</span>
</span></span><span class="line"><span class="cl"><span class="n">CGROUPS_DEVICES</span><span class="p">:</span> <span class="n">enabled</span>
</span></span><span class="line"><span class="cl"><span class="n">CGROUPS_FREEZER</span><span class="p">:</span> <span class="n">enabled</span>
</span></span><span class="line"><span class="cl"><span class="n">CGROUPS_MEMORY</span><span class="p">:</span> <span class="n">enabled</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="n">WARNING</span> <span class="n">SystemVerification</span><span class="p">]:</span> <span class="n">docker</span> <span class="n">version</span> <span class="n">is</span> <span class="n">greater</span> <span class="n">than</span> <span class="n">the</span> <span class="n">most</span> <span class="n">recently</span> <span class="n">validated</span> <span class="n">version</span><span class="o">.</span> <span class="n">Docker</span> <span class="n">version</span><span class="p">:</span> <span class="mf">18.06</span><span class="o">.</span><span class="mi">1</span><span class="o">-</span><span class="n">ce</span><span class="o">.</span> <span class="n">Max</span> <span class="n">validated</span> <span class="n">version</span><span class="p">:</span> <span class="mf">17.03</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="n">WARNING</span> <span class="n">SystemVerification</span><span class="p">]:</span> <span class="n">failed</span> <span class="n">to</span> <span class="n">parse</span> <span class="n">kernel</span> <span class="n">config</span><span class="p">:</span> <span class="n">unable</span> <span class="n">to</span> <span class="nb">load</span> <span class="n">kernel</span> <span class="n">module</span> <span class="s2">&#34;configs&#34;</span><span class="p">:</span> <span class="n">output</span> <span class="o">-</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="n">err</span> <span class="o">-</span> <span class="n">exit</span> <span class="n">status</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="n">WARNING</span> <span class="n">Port</span><span class="o">-</span><span class="mi">10250</span><span class="p">]:</span> <span class="n">Port</span> <span class="mi">10250</span> <span class="n">is</span> <span class="ow">in</span> <span class="n">use</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">discovery</span><span class="p">]</span> <span class="n">Trying</span> <span class="n">to</span> <span class="n">connect</span> <span class="n">to</span> <span class="n">API</span> <span class="n">Server</span> <span class="s2">&#34;192.168.0.28:6443&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">discovery</span><span class="p">]</span> <span class="n">Created</span> <span class="n">cluster</span><span class="o">-</span><span class="n">info</span> <span class="n">discovery</span> <span class="n">client</span><span class="p">,</span> <span class="n">requesting</span> <span class="n">info</span> <span class="n">from</span> <span class="s2">&#34;https://192.168.0.28:6443&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">discovery</span><span class="p">]</span> <span class="n">Requesting</span> <span class="n">info</span> <span class="n">from</span> <span class="s2">&#34;https://192.168.0.28:6443&#34;</span> <span class="n">again</span> <span class="n">to</span> <span class="n">validate</span> <span class="n">TLS</span> <span class="n">against</span> <span class="n">the</span> <span class="n">pinned</span> <span class="n">public</span> <span class="n">key</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">discovery</span><span class="p">]</span> <span class="n">Cluster</span> <span class="n">info</span> <span class="n">signature</span> <span class="ow">and</span> <span class="n">contents</span> <span class="n">are</span> <span class="n">valid</span> <span class="ow">and</span> <span class="n">TLS</span> <span class="n">certificate</span> <span class="n">validates</span> <span class="n">against</span> <span class="n">pinned</span> <span class="n">roots</span><span class="p">,</span> <span class="n">will</span> <span class="n">use</span> <span class="n">API</span> <span class="n">Server</span> <span class="s2">&#34;192.168.0.28:6443&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">discovery</span><span class="p">]</span> <span class="n">Successfully</span> <span class="n">established</span> <span class="n">connection</span> <span class="n">with</span> <span class="n">API</span> <span class="n">Server</span> <span class="s2">&#34;192.168.0.28:6443&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">kubelet</span><span class="p">]</span> <span class="n">Downloading</span> <span class="n">configuration</span> <span class="k">for</span> <span class="n">the</span> <span class="n">kubelet</span> <span class="n">from</span> <span class="n">the</span> <span class="s2">&#34;kubelet-config-1.11&#34;</span> <span class="n">ConfigMap</span> <span class="ow">in</span> <span class="n">the</span> <span class="n">kube</span><span class="o">-</span><span class="n">system</span> <span class="n">namespace</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">kubelet</span><span class="p">]</span> <span class="n">Writing</span> <span class="n">kubelet</span> <span class="n">configuration</span> <span class="n">to</span> <span class="n">file</span> <span class="s2">&#34;/var/lib/kubelet/config.yaml&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">kubelet</span><span class="p">]</span> <span class="n">Writing</span> <span class="n">kubelet</span> <span class="n">environment</span> <span class="n">file</span> <span class="n">with</span> <span class="n">flags</span> <span class="n">to</span> <span class="n">file</span> <span class="s2">&#34;/var/lib/kubelet/kubeadm-flags.env&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">preflight</span><span class="p">]</span> <span class="n">Activating</span> <span class="n">the</span> <span class="n">kubelet</span> <span class="n">service</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">tlsbootstrap</span><span class="p">]</span> <span class="n">Waiting</span> <span class="k">for</span> <span class="n">the</span> <span class="n">kubelet</span> <span class="n">to</span> <span class="n">perform</span> <span class="n">the</span> <span class="n">TLS</span> <span class="n">Bootstrap</span><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">patchnode</span><span class="p">]</span> <span class="n">Uploading</span> <span class="n">the</span> <span class="n">CRI</span> <span class="n">Socket</span> <span class="n">information</span> <span class="s2">&#34;/var/run/dockershim.sock&#34;</span> <span class="n">to</span> <span class="n">the</span> <span class="ne">Node</span> <span class="n">API</span> <span class="n">object</span> <span class="s2">&#34;node1&#34;</span> <span class="n">as</span> <span class="n">an</span> <span class="n">annotation</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">This</span> <span class="n">node</span> <span class="n">has</span> <span class="n">joined</span> <span class="n">the</span> <span class="n">cluster</span><span class="p">:</span>
</span></span><span class="line"><span class="cl"><span class="o">*</span> <span class="n">Certificate</span> <span class="n">signing</span> <span class="n">request</span> <span class="n">was</span> <span class="n">sent</span> <span class="n">to</span> <span class="n">master</span> <span class="ow">and</span> <span class="n">a</span> <span class="n">response</span>
</span></span><span class="line"><span class="cl">  <span class="n">was</span> <span class="n">received</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="o">*</span> <span class="n">The</span> <span class="n">Kubelet</span> <span class="n">was</span> <span class="n">informed</span> <span class="n">of</span> <span class="n">the</span> <span class="n">new</span> <span class="n">secure</span> <span class="n">connection</span> <span class="n">details</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Run</span> <span class="s1">&#39;kubectl get nodes&#39;</span> <span class="n">on</span> <span class="n">the</span> <span class="n">master</span> <span class="n">to</span> <span class="n">see</span> <span class="n">this</span> <span class="n">node</span> <span class="n">join</span> <span class="n">the</span> <span class="n">cluster</span><span class="o">.</span></span></span></code></pre></td></tr></table>
</div>
</div><p>多开几个实例，重复执行第四步，即可向Kubernetes集群中增加节点。</p>
<p>此时在master节点上执行<code>kubectl get nodes</code>查看节点所有节点状态：</p>
<div class="highlight" id="id-10"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[node1 ~]$ kubectl get nodes
</span></span><span class="line"><span class="cl">NAME      STATUS    ROLES     AGE       VERSION
</span></span><span class="line"><span class="cl">node1     Ready     master    19m       v1.11.3
</span></span><span class="line"><span class="cl">node2     Ready     &lt;none&gt;    2m        v1.11.3
</span></span><span class="line"><span class="cl">node3     Ready     &lt;none&gt;    1m        v1.11.3</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="创建nginx-deployment" class="heading-element">
  <a href="#%e5%88%9b%e5%bb%banginx-deployment" class="heading-mark"></a>创建nginx deployment</h3><div class="highlight" id="id-11"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">[</span>node1 ~<span class="o">]</span>$ curl https://raw.githubusercontent.com/kubernetes/website/master/content/en/examples/application/nginx-app.yaml &gt; nginx-app.yaml
</span></span><span class="line"><span class="cl">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
</span></span><span class="line"><span class="cl">                                 Dload  Upload   Total   Spent    Left  Speed
</span></span><span class="line"><span class="cl"><span class="m">100</span>   <span class="m">497</span>  <span class="m">100</span>   <span class="m">497</span>    <span class="m">0</span>     <span class="m">0</span>   <span class="m">1252</span>      <span class="m">0</span> --:--:-- --:--:-- --:--:--  <span class="m">1255</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>node1 ~<span class="o">]</span>$
</span></span><span class="line"><span class="cl"><span class="o">[</span>node1 ~<span class="o">]</span>$ kubectl apply -f nginx-app.yaml
</span></span><span class="line"><span class="cl">service/my-nginx-svc created
</span></span><span class="line"><span class="cl">deployment.apps/my-nginx created</span></span></code></pre></td></tr></table>
</div>
</div><p>此时查看nodes和pods：</p>
<div class="highlight" id="id-12"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">[</span>node1 ~<span class="o">]</span>$ kubectl get nodes
</span></span><span class="line"><span class="cl">NAME      STATUS    ROLES     AGE       VERSION
</span></span><span class="line"><span class="cl">node1     Ready     master    29m       v1.11.3
</span></span><span class="line"><span class="cl">node2     Ready     &lt;none&gt;    11m       v1.11.3
</span></span><span class="line"><span class="cl">node3     Ready     &lt;none&gt;    11m       v1.11.3
</span></span><span class="line"><span class="cl"><span class="o">[</span>node1 ~<span class="o">]</span>$
</span></span><span class="line"><span class="cl"><span class="o">[</span>node1 ~<span class="o">]</span>$ kubectl get pods
</span></span><span class="line"><span class="cl">NAME                        READY     STATUS    RESTARTS   AGE
</span></span><span class="line"><span class="cl">my-nginx-67594d6bf6-2cbbz   1/1       Running   <span class="m">0</span>          1m
</span></span><span class="line"><span class="cl">my-nginx-67594d6bf6-r2p6w   1/1       Running   <span class="m">0</span>          1m
</span></span><span class="line"><span class="cl">my-nginx-67594d6bf6-vjqn4   1/1       Running   <span class="m">0</span>          1m</span></span></code></pre></td></tr></table>
</div>
</div><p>参考来源：</p>
<ol>
<li><a href="https://github.com/cncf/toc/blob/master/DEFINITION.md"target="_blank" rel="external nofollow noopener noreferrer">https://github.com/cncf/toc/blob/master/DEFINITION.md<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%BE%AE%E6%9C%8D%E5%8B%99"target="_blank" rel="external nofollow noopener noreferrer">https://zh.wikipedia.org/wiki/%E5%BE%AE%E6%9C%8D%E5%8B%99<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li><a href="https://zh.wikipedia.org/zh-cn/%E5%AE%A3%E5%91%8A%E5%BC%8F%E7%B7%A8%E7%A8%8B"target="_blank" rel="external nofollow noopener noreferrer">https://zh.wikipedia.org/zh-cn/%E5%AE%A3%E5%91%8A%E5%BC%8F%E7%B7%A8%E7%A8%8B<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li><a href="https://zhuanlan.zhihu.com/p/34445114"target="_blank" rel="external nofollow noopener noreferrer">https://zhuanlan.zhihu.com/p/34445114<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li><a href="https://labs.play-with-k8s.com/"target="_blank" rel="external nofollow noopener noreferrer">https://labs.play-with-k8s.com/<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
</ol>
]]></description></item><item><title>Service Mesh概述</title><link>https://xzygis.github.io/posts/introduction-of-service-mesh/</link><pubDate>Tue, 28 Jan 2020 14:48:01 +0000</pubDate><author>作者</author><guid>https://xzygis.github.io/posts/introduction-of-service-mesh/</guid><description><![CDATA[<h2 id="什么是服务网格" class="heading-element">
  <a href="#%e4%bb%80%e4%b9%88%e6%98%af%e6%9c%8d%e5%8a%a1%e7%bd%91%e6%a0%bc" class="heading-mark"></a>什么是服务网格？</h2><p>服务网格是用于处理服务间通信的专用基础设施层。它负责通过包含现代云原生应用程序的复杂服务拓扑来可靠地传递请求。实际上，服务网格通常通过一组轻量级网络代理来实现，这些代理与应用程序代码一起部署，而不需要感知应用程序本身。</p>
<h3 id="服务网格的特点" class="heading-element">
  <a href="#%e6%9c%8d%e5%8a%a1%e7%bd%91%e6%a0%bc%e7%9a%84%e7%89%b9%e7%82%b9" class="heading-mark"></a>服务网格的特点</h3><p>服务网格有如下几个特点：</p>
<ul>
<li>应用程序间通讯的中间层</li>
<li>轻量级网络代理</li>
<li>应用程序无感知</li>
<li>解耦应用程序的重试/超时、监控、追踪和服务发现</li>
</ul>
<h3 id="理解服务网格" class="heading-element">
  <a href="#%e7%90%86%e8%a7%a3%e6%9c%8d%e5%8a%a1%e7%bd%91%e6%a0%bc" class="heading-mark"></a>理解服务网格</h3><p>如果用一句话来解释什么是服务网格，可以将它比作是应用程序或者说微服务间的 TCP/IP，负责服务之间的网络调用、限流、熔断和监控。</p>
<p>服务网格的架构如下图所示：
<img loading="lazy" src="https://img-blog.csdnimg.cn/20191116230107526.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=,size_16,color_FFFFFF,t_70" alt="Service Mesh架构图" srcset="https://img-blog.csdnimg.cn/20191116230107526.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=small, https://img-blog.csdnimg.cn/20191116230107526.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=medium 1.5x, https://img-blog.csdnimg.cn/20191116230107526.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=large 2x" sizes="auto" data-title="Service Mesh架构图" style="background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/></p>
<h3 id="为何使用服务网格" class="heading-element">
  <a href="#%e4%b8%ba%e4%bd%95%e4%bd%bf%e7%94%a8%e6%9c%8d%e5%8a%a1%e7%bd%91%e6%a0%bc" class="heading-mark"></a>为何使用服务网格？</h3><p>服务网格并没有给我们带来新功能，它是用于解决其他工具已经解决过的问题，只不过这次是在云原生的 Kubernetes 环境下的实现。</p>
<p>在传统的 MVC 三层 Web 应用程序架构下，服务之间的通讯并不复杂，在应用程序内部自己管理即可，但是在现今的复杂的大型网站情况下，单体应用被分解为众多的微服务，服务之间的依赖和通讯十分复杂，出现了 twitter 开发的 Finagle、Netflix 开发的 Hystrix 和 Google 的 Stubby 这样的 “胖客户端” 库，这些就是早期的服务网格，但是它们都仅适用于特定的环境和特定的开发语言，并不能作为平台级的服务网格支持。</p>
<p>在云原生架构下，容器的使用给予了异构应用程序的更多可行性，Kubernetes 增强的应用的横向扩容能力，用户可以快速的编排出复杂环境、复杂依赖关系的应用程序，同时开发者又无须过多关心应用程序的监控、扩展性、服务发现和分布式追踪这些繁琐的事情而专注于程序开发，赋予开发者更多的创造性。</p>
<h2 id="服务网格架构" class="heading-element">
  <a href="#%e6%9c%8d%e5%8a%a1%e7%bd%91%e6%a0%bc%e6%9e%b6%e6%9e%84" class="heading-mark"></a>服务网格架构</h2><p>服务网格中分为控制平面和数据平面，当前流行的两款开源的服务网格 Istio 和 Linkerd 实际上都是这种架构，只不过 Istio 的划分更清晰，而且部署更零散，很多组件都被拆分，控制平面中包括 Mixer、Pilot、Citadel，数据平面默认是用 Envoy；而 Linkerd 中只分为 Linkerd 做数据平面，namerd 作为控制平面。</p>
<p><strong>控制平面的特点</strong></p>
<ul>
<li>不直接解析数据包</li>
<li>与数据平面中的代理通信，下发策略和配置</li>
<li>负责网络行为的可视化</li>
<li>通常提供 API 或者命令行工具可用于配置版本化管理，便于持续集成和部署</li>
</ul>
<p><strong>数据平面的特点</strong></p>
<ul>
<li>通常是按照无状态目标设计的，但实际上为了提高流量转发性能，需要缓存一些数据，因此无状态也是有争议的</li>
<li>直接处理入站和出站数据包，转发、路由、健康检查、负载均衡、认证、鉴权、产生监控数据等</li>
<li>对应用来说透明，即可以做到无感知部署</li>
</ul>
<h3 id="服务网格的实现模式" class="heading-element">
  <a href="#%e6%9c%8d%e5%8a%a1%e7%bd%91%e6%a0%bc%e7%9a%84%e5%ae%9e%e7%8e%b0%e6%a8%a1%e5%bc%8f" class="heading-mark"></a>服务网格的实现模式</h3><p>Service Mesh 架构示意图：
<img loading="lazy" src="https://img-blog.csdnimg.cn/20191116231047738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=,size_16,color_FFFFFF,t_70" alt="Service Mesh架构示意图" srcset="https://img-blog.csdnimg.cn/20191116231047738.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=small, https://img-blog.csdnimg.cn/20191116231047738.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=medium 1.5x, https://img-blog.csdnimg.cn/20191116231047738.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=large 2x" sizes="auto" data-title="Service Mesh架构示意图" style="background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/></p>
<h3 id="istio-架构解析" class="heading-element">
  <a href="#istio-%e6%9e%b6%e6%9e%84%e8%a7%a3%e6%9e%90" class="heading-mark"></a>Istio 架构解析</h3><p><img loading="lazy" src="https://img-blog.csdnimg.cn/20191116231618741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" srcset="https://img-blog.csdnimg.cn/20191116231618741.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=small, https://img-blog.csdnimg.cn/20191116231618741.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=medium 1.5x, https://img-blog.csdnimg.cn/20191116231618741.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=large 2x" sizes="auto" data-title="在这里插入图片描述" style="background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/></p>
<ul>
<li>Istio 是独立于平台的，可以在 Kubernetes 、 Consul 、虚拟机上部署的服务</li>
<li>Istio 的组成
<ul>
<li>Envoy：智能代理、流量控制</li>
<li>Pilot：服务发现、流量管理</li>
<li>Mixer：访问控制、遥测</li>
<li>Citadel：终端用户认证、流量加密</li>
<li>Galley（1.1新增）：验证、处理和分配配置</li>
</ul>
</li>
<li>Service mesh 关注的方面
<ul>
<li>可观察性</li>
<li>安全性</li>
<li>可运维性</li>
<li>可拓展性</li>
</ul>
</li>
<li>Istio 的策略执行组件可以扩展和定制，同时也是可拔插的</li>
<li>Istio 在数据平面为每个服务中注入一个 Envoy 代理以 Sidecar 形式运行来劫持所有进出服务的流量，同时对流量加以控制，通俗的讲就是应用程序你只管处理你的业务逻辑，其他的事情 Sidecar 会汇报给 Istio 控制平面处理</li>
<li>应用程序只需关注于业务逻辑（这才能生钱）即可，非功能性需求交给 Istio</li>
</ul>
<p><strong>设计目标</strong></p>
<ul>
<li>最大化透明度</li>
<li>可扩展性</li>
<li>可移植性</li>
<li>策略一致性</li>
</ul>
<h3 id="从边车模式到-service-mesh" class="heading-element">
  <a href="#%e4%bb%8e%e8%be%b9%e8%bd%a6%e6%a8%a1%e5%bc%8f%e5%88%b0-service-mesh" class="heading-mark"></a>从边车模式到 Service Mesh</h3><h4 id="什么是边车模式" class="heading-element">
  <a href="#%e4%bb%80%e4%b9%88%e6%98%af%e8%be%b9%e8%bd%a6%e6%a8%a1%e5%bc%8f" class="heading-mark"></a>什么是边车模式</h4><blockquote>
<p>Deploy components of an application into a separate process or container to provide isolation and encapsulation.
&mdash; Sidecar pattern</p>
</blockquote>
<p><img loading="lazy" src="https://img-blog.csdnimg.cn/2019111623235962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=,size_16,color_FFFFFF,t_70" alt="SideCar" srcset="https://img-blog.csdnimg.cn/2019111623235962.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=small, https://img-blog.csdnimg.cn/2019111623235962.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=medium 1.5x, https://img-blog.csdnimg.cn/2019111623235962.png?x-oss-process=image/watermark%2ctype_ZmFuZ3poZW5naGVpdGk%2cshadow_10%2ctext_aHR0cHM6Ly9jaHV4aW5nLmJsb2cuY3Nkbi5uZXQ=%2csize_16%2ccolor_FFFFFF%2ct_70&amp;size=large 2x" sizes="auto" data-title="SideCar" style="background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/></p>
<h4 id="边车模式设计" class="heading-element">
  <a href="#%e8%be%b9%e8%bd%a6%e6%a8%a1%e5%bc%8f%e8%ae%be%e8%ae%a1" class="heading-mark"></a>边车模式设计</h4><p>有两种方法来实现边车模式：</p>
<ul>
<li>通过 SDK、Lib 等软件包的形式，在开发时引入该软件包依赖，使其与业务服务集成起来。</li>
<li>以 Sidecar 的形式，在运维的时候与应用服务集成在一起。</li>
</ul>
<h4 id="边车模式解决了什么问题" class="heading-element">
  <a href="#%e8%be%b9%e8%bd%a6%e6%a8%a1%e5%bc%8f%e8%a7%a3%e5%86%b3%e4%ba%86%e4%bb%80%e4%b9%88%e9%97%ae%e9%a2%98" class="heading-mark"></a>边车模式解决了什么问题</h4><ul>
<li>控制与逻辑分离的问题
<ul>
<li>业务代码只需要关心其复杂的业务逻辑</li>
<li>日志记录、监控、流量控制、服务注册、服务发现、服务限流、服务熔断、鉴权、访问控制等交给边车</li>
</ul>
</li>
<li>解决服务之间调用越来越复杂的问题
<ul>
<li>随着分布式架构越来越复杂和微服务越拆越细，我们越来越迫切的希望有一个统一的控制面来管理我们的微服务，来帮助我们维护和管理所有微服务</li>
</ul>
</li>
</ul>
<h4 id="从边车模式到-service-mesh-1" class="heading-element">
  <a href="#%e4%bb%8e%e8%be%b9%e8%bd%a6%e6%a8%a1%e5%bc%8f%e5%88%b0-service-mesh-1" class="heading-mark"></a>从边车模式到 Service Mesh</h4><p>遵循边车模式进行实践从很早以前就开始了，开发人员一直试图将服务治理等通用功能提取成一个标准化的 Sidecar ，通过 Sidecar 代理来与其他系统进行交互，这样可以大大简化业务开发和运维。而随着分布式架构和微服务被越来越多的公司和开发者接受并使用，这一需求日益凸显。这就是 Service Mesh 服务网格诞生的契机，它是 CNCF（Cloud Native Computing Foundation，云原生基金会）目前主推的新一代微服务架构。</p>
<p>Service Mesh 将底层那些难以控制的网络通讯统一管理，诸如：流量管控，丢包重试，访问控制等。而上层的应用层协议只需关心业务逻辑即可。Service Mesh 是一个用于处理服务间通信的基础设施层，它负责为构建复杂的云原生应用传递可靠的网络请求。</p>
<h2 id="kubernetes-vs-service-mesh" class="heading-element">
  <a href="#kubernetes-vs-service-mesh" class="heading-mark"></a>Kubernetes vs Service Mesh</h2><blockquote>
<p>Kubernetes 管理的对象是 Pod，Service Mesh 中管理的对象是 Service。</p>
</blockquote>
<ul>
<li>Kubernetes 的本质是应用的生命周期管理，具体来说就是部署和管理（扩缩容、自动恢复、发布）。</li>
<li>Kubernetes 为微服务提供了可扩展、高弹性的部署和管理平台。</li>
<li>Service Mesh 的基础是透明代理，通过 sidecar proxy 拦截到微服务间流量后再通过控制平面配置管理微服务的行为。</li>
<li>Service Mesh 将流量管理从 Kubernetes 中解耦，Service Mesh 内部的流量无需 kube-proxy 组件的支持，通过为更接近微服务应用层的抽象，管理服务间的流量、安全性和可观察性。</li>
<li>Service Mesh 是对 Kubernetes 中的 service 更上层的抽象，它的下一步是 serverless。</li>
</ul>
<hr>
<p>本文是针对ServiceMesher社区系列文章而整理的学习笔记，文章地址：https://www.servicemesher.com/istio-handbook/intro/service-mesh-the-microservices-in-post-kubernetes-era.html</p>
]]></description></item></channel></rss>